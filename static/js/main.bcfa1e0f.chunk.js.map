{"version":3,"sources":["calculator/Calculator.module.css","calculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Calculator","state","input","numbers","sign","storage","click","newNumber","setState","onPlusMinusClick","Math","abs","onDotClick","indexOf","onACClick","onChangeSign","action","onSign","result","onEquallyClick","className","styles","wrapper","placeholder","this","row","buttonOne","onClick","buttonTwo","buttonTreeAll","buttonZero","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bcfa1e0f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Calculator_wrapper__3e8sH\",\"row\":\"Calculator_row__1SD5Y\",\"input\":\"Calculator_input__wpbUM\",\"buttonTreeAll\":\"Calculator_buttonTreeAll__Y_aKK\",\"buttonOne\":\"Calculator_buttonOne__3luYl\",\"buttonTwo\":\"Calculator_buttonTwo__3iCqX\",\"buttonZero\":\"Calculator_buttonZero__13q5C\",\"s\":\"Calculator_s__23c1q\"};","import React from \"react\";\r\nimport styles from \"./Calculator.module.css\";\r\n\r\nclass Calculator extends React.Component {\r\n\r\n    state = {\r\n        input: '0',\r\n        numbers: false,\r\n        sign: '',\r\n        storage: ''\r\n    };\r\n\r\n    click = (newNumber) => {\r\n        if (this.state.numbers === false) {\r\n            this.setState({input: newNumber, numbers: true})\r\n        } else {\r\n            this.setState({input: this.state.input + newNumber})\r\n        }\r\n    };\r\n\r\n    onPlusMinusClick = () => {\r\n        if (this.state.input > 0) {\r\n            this.setState({input: '-' + this.state.input})\r\n        } else {\r\n            this.setState({input: Math.abs(this.state.input)})\r\n        }\r\n    };\r\n\r\n    onDotClick = () => {\r\n        if (this.state.input.indexOf('.') === -1) {\r\n            this.setState({input: this.state.input + \".\"})\r\n        }\r\n    };\r\n\r\n    onACClick = () => {\r\n        this.setState({input: 0, numbers: false})\r\n    };\r\n\r\n    onChangeSign = () => {\r\n        switch (this.state.action) {\r\n            case '/':\r\n                return this.state.storage / this.state.input;\r\n                break;\r\n            case 'x':\r\n                return this.state.storage * this.state.input;\r\n                break;\r\n            case '-':\r\n                return this.state.storage - this.state.input;\r\n                break;\r\n            case '+':\r\n                return +this.state.storage + +this.state.input;\r\n                break;\r\n        }\r\n    };\r\n\r\n    onSign = (sign) => {\r\n        switch (sign) {\r\n            case '/':\r\n                if (this.state.storage === '') {\r\n                    this.setState({action: '/', storage: this.state.input, numbers: false})\r\n                } else {\r\n                    let result = this.onChangeSign();\r\n                    this.setState({action: '/', storage: result, input: result, numbers: false})\r\n                }\r\n                break;\r\n            case 'x':\r\n                if (this.state.storage === '') {\r\n                    this.setState({action: 'x', storage: this.state.input, numbers: false})\r\n                } else {\r\n                    let result = this.onChangeSign();\r\n                    this.setState({action: 'x', storage: result, input: result, numbers: false})\r\n                }\r\n                break;\r\n            case '-':\r\n                if (this.state.storage === '') {\r\n                    this.setState({action: '-', storage: this.state.input, numbers: false})\r\n                } else {\r\n                    let result = this.onChangeSign();\r\n                    this.setState({action: '-', storage: result, input: result, numbers: false})\r\n                }\r\n                break;\r\n            case '+':\r\n                if (this.state.storage === '') {\r\n                    this.setState({action: '+', storage: this.state.input, numbers: false})\r\n                } else {\r\n                    let result = this.onChangeSign();\r\n                    this.setState({action: '+', storage: result, input: result, numbers: false})\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    onEquallyClick = () => {\r\n        switch (this.state.action) {\r\n            case '/':\r\n                this.setState(\r\n                    {\r\n                        input: this.state.storage / this.state.input,\r\n                        numbers: false,\r\n                        storage: '',\r\n                        action: ''\r\n                    });\r\n                break;\r\n            case 'x':\r\n                this.setState(\r\n                    {\r\n                        input: this.state.storage * this.state.input,\r\n                        numbers: false,\r\n                        storage: '',\r\n                        action: ''\r\n                    });\r\n                break;\r\n            case '-':\r\n                this.setState(\r\n                    {\r\n                        input: this.state.storage - this.state.input,\r\n                        numbers: false,\r\n                        storage: '',\r\n                        action: ''\r\n                    });\r\n                break;\r\n            case '+':\r\n                this.setState(\r\n                    {\r\n                        input: +this.state.storage + +this.state.input,\r\n                        numbers: false,\r\n                        storage: '',\r\n                        action: ''\r\n                    });\r\n                break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <div>\r\n                    <input placeholder={this.state.input} className={styles.input}/>\r\n                </div>\r\n                <div className={styles.row}>\r\n                    <div className={styles.buttonOne} onClick={() => {\r\n                        this.onACClick()\r\n                    }}>AC\r\n                    </div>\r\n                    <div className={styles.buttonOne} onClick={() => {\r\n                        this.onPlusMinusClick()\r\n                    }}>+/-\r\n                    </div>\r\n                    <div className={styles.buttonOne}>%</div>\r\n                    <div className={styles.buttonTwo} onClick={() => {\r\n                        this.onSign('/')\r\n                    }}>/\r\n                    </div>\r\n                </div>\r\n                <div className={styles.row}>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"7\")}>7</div>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"8\")}>8</div>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"9\")}>9</div>\r\n                    <div className={styles.buttonTwo} onClick={() => {\r\n                        this.onSign('x')\r\n                    }}>x\r\n                    </div>\r\n                </div>\r\n                <div className={styles.row}>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"4\")}>4</div>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"5\")}>5</div>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"6\")}>6</div>\r\n                    <div className={styles.buttonTwo} onClick={() => {\r\n                        this.onSign('-')\r\n                    }}>-\r\n                    </div>\r\n                </div>\r\n                <div className={styles.row}>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"1\")}>1</div>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"2\")}>2</div>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.click(\"3\")}>3</div>\r\n                    <div className={styles.buttonTwo} onClick={() => {\r\n                        this.onSign('+')\r\n                    }}>+\r\n                    </div>\r\n                </div>\r\n                <div className={styles.row}>\r\n                    <div className={styles.buttonZero} onClick={() => this.click(\"0\")}>0</div>\r\n                    <div className={styles.buttonTreeAll} onClick={() => this.onDotClick()}>,</div>\r\n                    <div className={styles.buttonTwo} onClick={() => this.onEquallyClick()}>=</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\nimport Calculator from \"./calculator/Calculator\";\n\nfunction App () {\n    return <Calculator/>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}